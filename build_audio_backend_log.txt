warning: virtual workspace defaulting to `resolver = "1"` despite one or more workspace members being on edition 2024 which implies `resolver = "3"`
note: to keep the current resolver, specify `workspace.resolver = "1"` in the workspace root's manifest
note: to use the edition 2024 resolver, specify `workspace.resolver = "3"` in the workspace root's manifest
note: for more details see https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions
   Compiling audio-backend v0.1.0 (C:\Users\adilh\repos\AudioVerseEngine\audio-backend)
     Running `C:\Users\adilh\.rustup\toolchains\stable-x86_64-pc-windows-msvc\bin\rustc.exe --crate-name test_play --edition=2024 audio-backend\tests\test_play.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --check-cfg cfg(docsrs,test) --check-cfg "cfg(feature, values())" -C metadata=977129f2b2d6be61 -C extra-filename=-c7a8564fc81a2565 --out-dir C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps -C incremental=C:\Users\adilh\repos\AudioVerseEngine\target\debug\incremental -L dependency=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps --extern audio_backend=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps\libaudio_backend-8aa170d636ccb8c3.rlib`
     Running `C:\Users\adilh\.rustup\toolchains\stable-x86_64-pc-windows-msvc\bin\rustc.exe --crate-name audio_backend --edition=2024 audio-backend\tests\audio_backend.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --check-cfg cfg(docsrs,test) --check-cfg "cfg(feature, values())" -C metadata=b6c49dc1fbb84947 -C extra-filename=-bdbf200f66ff15cb --out-dir C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps -C incremental=C:\Users\adilh\repos\AudioVerseEngine\target\debug\incremental -L dependency=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps --extern audio_backend=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps\libaudio_backend-8aa170d636ccb8c3.rlib`
     Running `C:\Users\adilh\.rustup\toolchains\stable-x86_64-pc-windows-msvc\bin\rustc.exe --crate-name resonance_integration --edition=2024 audio-backend\tests\resonance_integration.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --check-cfg cfg(docsrs,test) --check-cfg "cfg(feature, values())" -C metadata=f576ba6aecbb580a -C extra-filename=-3959c427a0473d92 --out-dir C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps -C incremental=C:\Users\adilh\repos\AudioVerseEngine\target\debug\incremental -L dependency=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps --extern audio_backend=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps\libaudio_backend-8aa170d636ccb8c3.rlib`
error[E0433]: failed to resolve: use of unresolved module or unlinked crate `cpal`
 --> audio-backend\tests\test_play.rs:1:5
  |
1 | use cpal::traits::{DeviceTrait, HostTrait, StreamTrait};
  |     ^^^^ use of unresolved module or unlinked crate `cpal`
  |
  = help: if you wanted to use a crate named `cpal`, use `cargo add cpal` to add it to your `Cargo.toml`

error[E0432]: unresolved imports `audio_backend::AudioBackend`, `audio_backend::CpalAudioBackend`
 --> audio-backend\tests\audio_backend.rs:1:21
  |
1 | use audio_backend::{AudioBackend, CpalAudioBackend};
  |                     ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^ no `CpalAudioBackend` in the root
  |                     |
  |                     no `AudioBackend` in the root

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `cpal`
  --> audio-backend\tests\test_play.rs:18:9
   |
18 |         cpal::SampleFormat::F32 => device.build_output_stream(
   |         ^^^^ use of unresolved module or unlinked crate `cpal`
   |
   = help: if you wanted to use a crate named `cpal`, use `cargo add cpal` to add it to your `Cargo.toml`

error[E0432]: unresolved imports `audio_backend::AudioBackend`, `audio_backend::CpalAudioBackend`
 --> audio-backend\tests\resonance_integration.rs:2:21
  |
2 | use audio_backend::{AudioBackend, CpalAudioBackend};
  |                     ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^ no `CpalAudioBackend` in the root
  |                     |
  |                     no `AudioBackend` in the root

error[E0432]: unresolved import `resonance_ffi`
 --> audio-backend\tests\resonance_integration.rs:1:5
  |
1 | use resonance_ffi::ResonanceCtx;
  |     ^^^^^^^^^^^^^ use of unresolved module or unlinked crate `resonance_ffi`
  |
  = help: if you wanted to use a crate named `resonance_ffi`, use `cargo add resonance_ffi` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `cpal`
  --> audio-backend\tests\test_play.rs:32:9
   |
32 |         cpal::SampleFormat::I16 => device.build_output_stream(
   |         ^^^^ use of unresolved module or unlinked crate `cpal`
   |
   = help: if you wanted to use a crate named `cpal`, use `cargo add cpal` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `cpal`
  --> audio-backend\tests\test_play.rs:46:9
   |
46 |         cpal::SampleFormat::U16 => device.build_output_stream(
   |         ^^^^ use of unresolved module or unlinked crate `cpal`
   |
   = help: if you wanted to use a crate named `cpal`, use `cargo add cpal` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `cpal`
 --> audio-backend\tests\test_play.rs:5:16
  |
5 |     let host = cpal::default_host();
  |                ^^^^ use of unresolved module or unlinked crate `cpal`
  |
  = help: if you wanted to use a crate named `cpal`, use `cargo add cpal` to add it to your `Cargo.toml`

For more information about this error, try `rustc --explain E0432`.
error: could not compile `audio-backend` (test "audio_backend") due to 1 previous error

Caused by:
  process didn't exit successfully: `C:\Users\adilh\.rustup\toolchains\stable-x86_64-pc-windows-msvc\bin\rustc.exe --crate-name audio_backend --edition=2024 audio-backend\tests\audio_backend.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --check-cfg cfg(docsrs,test) --check-cfg "cfg(feature, values())" -C metadata=b6c49dc1fbb84947 -C extra-filename=-bdbf200f66ff15cb --out-dir C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps -C incremental=C:\Users\adilh\repos\AudioVerseEngine\target\debug\incremental -L dependency=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps --extern audio_backend=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps\libaudio_backend-8aa170d636ccb8c3.rlib` (exit code: 1)
warning: build failed, waiting for other jobs to finish...
For more information about this error, try `rustc --explain E0433`.
error: could not compile `audio-backend` (test "resonance_integration") due to 2 previous errors

Caused by:
  process didn't exit successfully: `C:\Users\adilh\.rustup\toolchains\stable-x86_64-pc-windows-msvc\bin\rustc.exe --crate-name resonance_integration --edition=2024 audio-backend\tests\resonance_integration.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --check-cfg cfg(docsrs,test) --check-cfg "cfg(feature, values())" -C metadata=f576ba6aecbb580a -C extra-filename=-3959c427a0473d92 --out-dir C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps -C incremental=C:\Users\adilh\repos\AudioVerseEngine\target\debug\incremental -L dependency=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps --extern audio_backend=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps\libaudio_backend-8aa170d636ccb8c3.rlib` (exit code: 1)
error: could not compile `audio-backend` (test "test_play") due to 5 previous errors

Caused by:
  process didn't exit successfully: `C:\Users\adilh\.rustup\toolchains\stable-x86_64-pc-windows-msvc\bin\rustc.exe --crate-name test_play --edition=2024 audio-backend\tests\test_play.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --check-cfg cfg(docsrs,test) --check-cfg "cfg(feature, values())" -C metadata=977129f2b2d6be61 -C extra-filename=-c7a8564fc81a2565 --out-dir C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps -C incremental=C:\Users\adilh\repos\AudioVerseEngine\target\debug\incremental -L dependency=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps --extern audio_backend=C:\Users\adilh\repos\AudioVerseEngine\target\debug\deps\libaudio_backend-8aa170d636ccb8c3.rlib` (exit code: 1)
