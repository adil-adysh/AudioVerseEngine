warning: virtual workspace defaulting to `resolver = "1"` despite one or more workspace members being on edition 2024 which implies `resolver = "3"`
note: to keep the current resolver, specify `workspace.resolver = "1"` in the workspace root's manifest
note: to use the edition 2024 resolver, specify `workspace.resolver = "3"` in the workspace root's manifest
note: for more details see https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions
   Compiling audio-backend v0.1.0 (C:\Users\adilh\repos\AudioVerseEngine\audio-backend)
warning: field `diagnostics_events` is never read
  --> audio-backend\tests\test-mock-audiobackend.rs:23:5
   |
20 | struct MockSharedState {
   |        --------------- field in this struct
...
23 |     diagnostics_events: Vec<DiagnosticEvent>,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: variant `Shutdown` is never constructed
  --> audio-backend\tests\test-mock-audiobackend.rs:31:5
   |
27 | enum MockCtrlMsg {
   |      ----------- variant in this enum
...
31 |     Shutdown,
   |     ^^^^^^^^

warning: `audio-backend` (test "test-mock-audiobackend") generated 2 warnings
error[E0046]: not all trait items implemented, missing: `as_device_info_provider`
   --> audio-backend\tests\test-windows-audiobackend.rs:183:1
    |
183 | impl AudioBackend for CpalAudioBackend {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `as_device_info_provider` in implementation
    |
    = help: implement the missing item: `fn as_device_info_provider(&self) -> Option<&dyn DeviceInfoProvider> { todo!() }`

error[E0063]: missing field `device_name` in initializer of `DeviceInfo`
  --> audio-backend\tests\test-windows-audiobackend.rs:73:20
   |
73 |         let info = DeviceInfo {
   |                    ^^^^^^^^^^ missing `device_name`

Some errors have detailed explanations: E0046, E0063.
For more information about an error, try `rustc --explain E0046`.
error: could not compile `audio-backend` (test "test-windows-audiobackend") due to 2 previous errors
